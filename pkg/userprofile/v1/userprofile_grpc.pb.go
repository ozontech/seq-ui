// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.29.3
// source: userprofile/v1/userprofile.proto

package userprofile

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	UserProfileService_GetUserProfile_FullMethodName      = "/userprofile.v1.UserProfileService/GetUserProfile"
	UserProfileService_UpdateUserProfile_FullMethodName   = "/userprofile.v1.UserProfileService/UpdateUserProfile"
	UserProfileService_GetFavoriteQueries_FullMethodName  = "/userprofile.v1.UserProfileService/GetFavoriteQueries"
	UserProfileService_CreateFavoriteQuery_FullMethodName = "/userprofile.v1.UserProfileService/CreateFavoriteQuery"
	UserProfileService_DeleteFavoriteQuery_FullMethodName = "/userprofile.v1.UserProfileService/DeleteFavoriteQuery"
)

// UserProfileServiceClient is the client API for UserProfileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserProfileServiceClient interface {
	GetUserProfile(ctx context.Context, in *GetUserProfileRequest, opts ...grpc.CallOption) (*GetUserProfileResponse, error)
	UpdateUserProfile(ctx context.Context, in *UpdateUserProfileRequest, opts ...grpc.CallOption) (*UpdateUserProfileResponse, error)
	GetFavoriteQueries(ctx context.Context, in *GetFavoriteQueriesRequest, opts ...grpc.CallOption) (*GetFavoriteQueriesResponse, error)
	CreateFavoriteQuery(ctx context.Context, in *CreateFavoriteQueryRequest, opts ...grpc.CallOption) (*CreateFavoriteQueryResponse, error)
	DeleteFavoriteQuery(ctx context.Context, in *DeleteFavoriteQueryRequest, opts ...grpc.CallOption) (*DeleteFavoriteQueryResponse, error)
}

type userProfileServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserProfileServiceClient(cc grpc.ClientConnInterface) UserProfileServiceClient {
	return &userProfileServiceClient{cc}
}

func (c *userProfileServiceClient) GetUserProfile(ctx context.Context, in *GetUserProfileRequest, opts ...grpc.CallOption) (*GetUserProfileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetUserProfileResponse)
	err := c.cc.Invoke(ctx, UserProfileService_GetUserProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userProfileServiceClient) UpdateUserProfile(ctx context.Context, in *UpdateUserProfileRequest, opts ...grpc.CallOption) (*UpdateUserProfileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateUserProfileResponse)
	err := c.cc.Invoke(ctx, UserProfileService_UpdateUserProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userProfileServiceClient) GetFavoriteQueries(ctx context.Context, in *GetFavoriteQueriesRequest, opts ...grpc.CallOption) (*GetFavoriteQueriesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetFavoriteQueriesResponse)
	err := c.cc.Invoke(ctx, UserProfileService_GetFavoriteQueries_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userProfileServiceClient) CreateFavoriteQuery(ctx context.Context, in *CreateFavoriteQueryRequest, opts ...grpc.CallOption) (*CreateFavoriteQueryResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateFavoriteQueryResponse)
	err := c.cc.Invoke(ctx, UserProfileService_CreateFavoriteQuery_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userProfileServiceClient) DeleteFavoriteQuery(ctx context.Context, in *DeleteFavoriteQueryRequest, opts ...grpc.CallOption) (*DeleteFavoriteQueryResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteFavoriteQueryResponse)
	err := c.cc.Invoke(ctx, UserProfileService_DeleteFavoriteQuery_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserProfileServiceServer is the server API for UserProfileService service.
// All implementations should embed UnimplementedUserProfileServiceServer
// for forward compatibility
type UserProfileServiceServer interface {
	GetUserProfile(context.Context, *GetUserProfileRequest) (*GetUserProfileResponse, error)
	UpdateUserProfile(context.Context, *UpdateUserProfileRequest) (*UpdateUserProfileResponse, error)
	GetFavoriteQueries(context.Context, *GetFavoriteQueriesRequest) (*GetFavoriteQueriesResponse, error)
	CreateFavoriteQuery(context.Context, *CreateFavoriteQueryRequest) (*CreateFavoriteQueryResponse, error)
	DeleteFavoriteQuery(context.Context, *DeleteFavoriteQueryRequest) (*DeleteFavoriteQueryResponse, error)
}

// UnimplementedUserProfileServiceServer should be embedded to have forward compatible implementations.
type UnimplementedUserProfileServiceServer struct {
}

func (UnimplementedUserProfileServiceServer) GetUserProfile(context.Context, *GetUserProfileRequest) (*GetUserProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserProfile not implemented")
}
func (UnimplementedUserProfileServiceServer) UpdateUserProfile(context.Context, *UpdateUserProfileRequest) (*UpdateUserProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserProfile not implemented")
}
func (UnimplementedUserProfileServiceServer) GetFavoriteQueries(context.Context, *GetFavoriteQueriesRequest) (*GetFavoriteQueriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFavoriteQueries not implemented")
}
func (UnimplementedUserProfileServiceServer) CreateFavoriteQuery(context.Context, *CreateFavoriteQueryRequest) (*CreateFavoriteQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFavoriteQuery not implemented")
}
func (UnimplementedUserProfileServiceServer) DeleteFavoriteQuery(context.Context, *DeleteFavoriteQueryRequest) (*DeleteFavoriteQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFavoriteQuery not implemented")
}

// UnsafeUserProfileServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserProfileServiceServer will
// result in compilation errors.
type UnsafeUserProfileServiceServer interface {
	mustEmbedUnimplementedUserProfileServiceServer()
}

func RegisterUserProfileServiceServer(s grpc.ServiceRegistrar, srv UserProfileServiceServer) {
	s.RegisterService(&UserProfileService_ServiceDesc, srv)
}

func _UserProfileService_GetUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfileServiceServer).GetUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserProfileService_GetUserProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfileServiceServer).GetUserProfile(ctx, req.(*GetUserProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserProfileService_UpdateUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfileServiceServer).UpdateUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserProfileService_UpdateUserProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfileServiceServer).UpdateUserProfile(ctx, req.(*UpdateUserProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserProfileService_GetFavoriteQueries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFavoriteQueriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfileServiceServer).GetFavoriteQueries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserProfileService_GetFavoriteQueries_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfileServiceServer).GetFavoriteQueries(ctx, req.(*GetFavoriteQueriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserProfileService_CreateFavoriteQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFavoriteQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfileServiceServer).CreateFavoriteQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserProfileService_CreateFavoriteQuery_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfileServiceServer).CreateFavoriteQuery(ctx, req.(*CreateFavoriteQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserProfileService_DeleteFavoriteQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFavoriteQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfileServiceServer).DeleteFavoriteQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserProfileService_DeleteFavoriteQuery_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfileServiceServer).DeleteFavoriteQuery(ctx, req.(*DeleteFavoriteQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UserProfileService_ServiceDesc is the grpc.ServiceDesc for UserProfileService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserProfileService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "userprofile.v1.UserProfileService",
	HandlerType: (*UserProfileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserProfile",
			Handler:    _UserProfileService_GetUserProfile_Handler,
		},
		{
			MethodName: "UpdateUserProfile",
			Handler:    _UserProfileService_UpdateUserProfile_Handler,
		},
		{
			MethodName: "GetFavoriteQueries",
			Handler:    _UserProfileService_GetFavoriteQueries_Handler,
		},
		{
			MethodName: "CreateFavoriteQuery",
			Handler:    _UserProfileService_CreateFavoriteQuery_Handler,
		},
		{
			MethodName: "DeleteFavoriteQuery",
			Handler:    _UserProfileService_DeleteFavoriteQuery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userprofile/v1/userprofile.proto",
}
